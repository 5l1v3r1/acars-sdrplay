######################################################################
# Automatically generated by qmake (2.01a) Tue Oct 6 19:48:14 2009
# but modified by me to accomodate for the includes for qwt, hamlib and
# portaudio
######################################################################

TEMPLATE	= app
TARGET		= acars-0.5

QT		+= widgets 
CONFIG		+= console
QMAKE_CXXFLAGS	+= -std=c++11
#QMAKE_CFLAGS	+=  -flto -ffast-math
#QMAKE_CXXFLAGS	+=  -flto -ffast-math
#QMAKE_LFLAGS	+=  -flto
QMAKE_CFLAGS	+=  -g
QMAKE_CXXFLAGS	+=  -g
QMAKE_LFLAGS	+=  -g
QMAKE_CXXFLAGS += -isystem $$[QT_INSTALL_HEADERS]

TRANSLATIONS = i18n/de_DE.ts i18n/it_IT.ts i18n/hu_HU.ts

DEPENDPATH += . \
	      ./filters \
	      ./devices 

INCLUDEPATH += . \
	      ./filters \
	      ./devices 

# Input
HEADERS += ./acars.h \
	   ./acars-constants.h \
	   ./channel-handler.h \
	   ./channel-decoder.h \
	   ./spectrum-handler.h \
	   ./printer.h \
	   ./semaphore.h \
	   ./input-processor.h \
	   ./filters/fir-filters.h \
	   ./devices/device-handler.h

FORMS	+= ./acars.ui

SOURCES += ./main.cpp \
	   ./acars.cpp \
	   ./channel-handler.cpp \
	   ./channel-decoder.cpp \
	   ./spectrum-handler.cpp \
	   ./printer.cpp \
	   ./input-processor.cpp \
	   ./filters/fir-filters.cpp \
	   ./devices/device-handler.cpp 
#
#	for unix systems this is about it. Adapt when needed for naming
#	and locating libraries. If you do not need a device as
#	listed, just comment the line out.
#
unix {
DESTDIR		= ./linux-bin
INCLUDEPATH	+= /usr/local/include
INCLUDEPATH	+= /usr/local/include /usr/include/qt4/qwt /usr/include/qt5/qwt /usr/include/qt4/qwt /usr/include/qwt /usr/local/qwt-6.1.4-svn/

LIBS		+= -lfftw3f  -lusb-1.0 -ldl  #
LIBS		+= -lportaudio
LIBS		+= -lz
LIBS		+= -lsndfile
LIBS		+= -lsamplerate
LIBS		+= -lfaad
LIBS		+= -lqwt-qt5

#
# comment or uncomment for the devices you want to have support for
# (you obviously have libraries installed for the selected ones)
CONFIG		+= sdrplay
CONFIG		+= airspy

}
#
# an attempt to have it run under W32 through cross compilation
win32 {
DESTDIR		= ../../windows-bin
# includes in mingw differ from the includes in fedora linux

exists ("./.git") {
   GITHASHSTRING = $$system(git rev-parse --short HEAD)
   !isEmpty(GITHASHSTRING) {
       message("Current git hash = $$GITHASHSTRING")
       DEFINES += GITHASH=\\\"$$GITHASHSTRING\\\"
   }
}
isEmpty(GITHASHSTRING) {
    DEFINES += GITHASH=\\\"------\\\"
}

INCLUDEPATH += /usr/i686-w64-mingw32/sys-root/mingw/include
INCLUDEPATH += /usr/i686-w64-mingw32/sys-root/mingw/include/qt5/qwt
INCLUDEPATH	+= /mingw32/include
INCLUDEPATH	+= /mingw32/include/qwt
LIBS		+= -L/usr/i686-w64-mingw32/sys-root/mingw/lib
LIBS		+= -lqwt-qt5
LIBS		+= -lfftw3f
LIBS		+= -lportaudio
LIBS		+= -lsndfile
LIBS		+= -lsamplerate
LIBS		+= -lole32
LIBS		+= -lwinpthread
LIBS		+= -lwinmm
LIBS 		+= -lstdc++
LIBS		+= -lws2_32
LIBS		+= -lfaad
LIBS		+= -lusb-1.0
LIBS		+= -lz
FORMS 		+= ./forms/dabradio.ui 
FORMS		+= ./forms/technical_data.ui

CONFIG		+= airspy
CONFIG		+= dabstick
CONFIG		+= sdrplay

CONFIG		+= NO_SSE


#for the raspberry you definitely want this one
#when this one is enabled, load is spread over different threads
DEFINES	+= __THREADED_BACKEND
#DEFINES	+= __THREADED_DECODING


#and this one is experimental
# DEFINES		+= PRESET_NAME

}

#	devices
#
#	dabstick
dabstick {
	DEFINES		+= HAVE_RTLSDR
	DEPENDPATH	+= ./devices/rtlsdr-handler
	INCLUDEPATH	+= ./devices/rtlsdr-handler
	HEADERS		+= ./devices/rtlsdr-handler/rtlsdr-handler.h 
	SOURCES		+= ./devices/rtlsdr-handler/rtlsdr-handler.cpp 
	FORMS		+= ./devices/rtlsdr-handler/rtlsdr-widget.ui
}
#
#	the SDRplay
#
sdrplay {
	DEFINES		+= HAVE_SDRPLAY
	DEPENDPATH	+= ./devices/sdrplay-handler 
	INCLUDEPATH	+= ./devices/sdrplay-handler 
	HEADERS		+= ./devices/sdrplay-handler/sdrplay-handler.h 
	SOURCES		+= ./devices/sdrplay-handler/sdrplay-handler.cpp 
	LIBS		+= -lmirsdrapi-rsp
}
#
#
# airspy support
#
airspy {
	DEFINES		+= HAVE_AIRSPY
	DEPENDPATH	+= ./devices/airspy 
	INCLUDEPATH	+= ./devices/airspy-handler 
	HEADERS		+= ./devices/airspy-handler/airspy-handler.h 
	SOURCES		+= ./devices/airspy-handler/airspy-handler.cpp 
}

#
NEON	{
	DEFINES		+= NEON_AVAILABLE
	QMAKE_CFLAGS	+=  -mfpu=neon-vfpv4
	QMAKE_CXXFLAGS	+=  -mfpu=neon-vfpv4
	HEADERS		+= ./src/backend/viterbi_768/spiral-neon.h
	SOURCES		+= ./src/backend/viterbi_768/spiral-neon.c
}

SSE	{
	DEFINES		+= SSE_AVAILABLE
	HEADERS		+= ./src/backend/viterbi_768/spiral-sse.h
	SOURCES		+= ./src/backend/viterbi_768/spiral-sse.c
}

NO_SSE	{
	HEADERS		+= ./src/backend/viterbi_768/spiral-no-sse.h
	SOURCES		+= ./src/backend/viterbi_768/spiral-no-sse.c
}

